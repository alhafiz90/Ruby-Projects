require 'fileutils'
require 'find'
require 'pathname'

class DirectorySearch

  attr_reader:file_paths
  @file_name=[]
  def intialize()

  end

  def get_file_path_list(root_dir,extension)
    @file_paths=[]
    puts root_dir
    pattern="."+extension

    Find.find(root_dir) do |conf_dir|
    #if (conf_dir.downcase.match(pattern.downcase))
      if(conf_dir.downcase.include?(pattern.downcase))

        puts conf_dir
      @file_paths << conf_dir.to_s

      else
      next
      end
    end
    @file_paths
  end

end

begin
  puts "Press 1 to select Current Dir:[#{Dir.pwd}] OR Enter Base Directory To Move file."
  base=gets.chomp
  if(base.to_i.eql?(1))
    base=Dir.pwd
  end
  puts base
  puts "Enter Destination Directory"
  dst=gets.chomp.to_s
  puts "Enter File Extension"
  ext=gets.chomp
  FileUtils.mkdir_p(dst)
  count=0
  a=DirectorySearch.new()
  file_paths=a.get_file_path_list(base,ext)

  file_paths.each do |file|
    count+=1
    puts "#{count}:#{file}"

    #FileUtils.mv(file.to_s, dst)
  end
rescue Exception => e
  puts e.message
  backtrace.inspect
end

